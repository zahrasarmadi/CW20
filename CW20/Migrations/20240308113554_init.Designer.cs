// <auto-generated />
using CW20.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CW20.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240308113554_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CW20.Models.Ad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("CW20.Models.Bookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookmarks");
                });

            modelBuilder.Entity("CW20.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "املاک"
                        },
                        new
                        {
                            Id = 2,
                            Name = "وسایل نقلیه"
                        },
                        new
                        {
                            Id = 3,
                            Name = "کالای دیجیتال"
                        },
                        new
                        {
                            Id = 4,
                            Name = "خانه و آشپزخانه"
                        },
                        new
                        {
                            Id = 5,
                            Name = "خدمات"
                        },
                        new
                        {
                            Id = 6,
                            Name = "وسایل شخصی"
                        },
                        new
                        {
                            Id = 7,
                            Name = "سرگرمی و فراغت"
                        },
                        new
                        {
                            Id = 8,
                            Name = "اجتماعی"
                        },
                        new
                        {
                            Id = 9,
                            Name = "تجهیزات و صنعتی"
                        },
                        new
                        {
                            Id = 10,
                            Name = "استخدام و کاریابی"
                        });
                });

            modelBuilder.Entity("CW20.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "اراک"
                        },
                        new
                        {
                            Id = 2,
                            Name = "اردبیل"
                        },
                        new
                        {
                            Id = 3,
                            Name = "تبریز"
                        },
                        new
                        {
                            Id = 4,
                            Name = "اصفهان"
                        },
                        new
                        {
                            Id = 5,
                            Name = "اهواز"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ایلام"
                        },
                        new
                        {
                            Id = 7,
                            Name = "بجنورد"
                        },
                        new
                        {
                            Id = 8,
                            Name = "بندرعباس"
                        },
                        new
                        {
                            Id = 9,
                            Name = "بوشهر"
                        },
                        new
                        {
                            Id = 10,
                            Name = "بیرجند"
                        },
                        new
                        {
                            Id = 11,
                            Name = "ارومیه"
                        },
                        new
                        {
                            Id = 12,
                            Name = "تهران"
                        },
                        new
                        {
                            Id = 13,
                            Name = "خرم آباد"
                        },
                        new
                        {
                            Id = 14,
                            Name = "رشت"
                        },
                        new
                        {
                            Id = 15,
                            Name = "زاهدان"
                        },
                        new
                        {
                            Id = 16,
                            Name = "زنجان"
                        },
                        new
                        {
                            Id = 17,
                            Name = "ساری"
                        },
                        new
                        {
                            Id = 18,
                            Name = "سمنان"
                        },
                        new
                        {
                            Id = 19,
                            Name = "سنندج"
                        },
                        new
                        {
                            Id = 20,
                            Name = "شهرکرد"
                        },
                        new
                        {
                            Id = 21,
                            Name = "شیراز"
                        },
                        new
                        {
                            Id = 22,
                            Name = "قزوین"
                        },
                        new
                        {
                            Id = 23,
                            Name = "قم"
                        },
                        new
                        {
                            Id = 24,
                            Name = "کرج"
                        },
                        new
                        {
                            Id = 25,
                            Name = "کرمان"
                        },
                        new
                        {
                            Id = 26,
                            Name = "کرمانشاه"
                        },
                        new
                        {
                            Id = 27,
                            Name = "گرگان"
                        },
                        new
                        {
                            Id = 28,
                            Name = "مشهد"
                        },
                        new
                        {
                            Id = 29,
                            Name = "همدان"
                        },
                        new
                        {
                            Id = 30,
                            Name = "یاسوج"
                        },
                        new
                        {
                            Id = 31,
                            Name = "یزد"
                        });
                });

            modelBuilder.Entity("CW20.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("CW20.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FisrtName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CW20.Models.Ad", b =>
                {
                    b.HasOne("CW20.Models.Category", "Category")
                        .WithMany("Ads")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CW20.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CW20.Models.User", "User")
                        .WithMany("Ads")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CW20.Models.Bookmark", b =>
                {
                    b.HasOne("CW20.Models.Ad", "Ad")
                        .WithMany("UserBookmarks")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CW20.Models.User", "User")
                        .WithMany("Bookmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CW20.Models.Picture", b =>
                {
                    b.HasOne("CW20.Models.Ad", "Ad")
                        .WithMany("Pictures")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ad");
                });

            modelBuilder.Entity("CW20.Models.Ad", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("UserBookmarks");
                });

            modelBuilder.Entity("CW20.Models.Category", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("CW20.Models.User", b =>
                {
                    b.Navigation("Ads");

                    b.Navigation("Bookmarks");
                });
#pragma warning restore 612, 618
        }
    }
}
